{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // import axios from \"axios\"\n//import apiClient from \"../../services/apiClient\"\n//import NotAllowed from \"../NotAllowed/NotAllowed\"\n\nimport \"./NewActivityForm.css\";\nexport default function NewActivityForm({\n  user,\n  addActivity\n}) {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [form, setForm] = useState({\n    caption: \"\",\n    imageUrl: \"\"\n  });\n\n  const handleOnInputChange = event => {\n    setForm(f => ({ ...f,\n      [event.target.name]: event.target.value\n    }));\n  }; // const handleOnSubmit = async () => {\n  //   setIsLoading(true)\n  //   const { data, error } = await apiClient.createPost({ caption: form.caption, imageUrl: form.imageUrl })\n  //   if (data) {\n  //     addActivity(data.post)\n  //     setForm({ caption: \"\", imageUrl: \"\" })\n  //   }\n  //   if (error) {\n  //     setError(error)\n  //   }\n  //   setIsLoading(false)\n  // }\n  // const handleOnSubmit = async (e) => {\n  //   e.preventDefault()\n  //   setIsLoading(true)\n  //   try {\n  //     const res = await axios.post(`http://localhost:3001/posts`, form)\n  //     if (res?.data?.post) {\n  //       addActivity(res.data.post)\n  //       setForm({ caption: \"\", imageUrl: \"\" })\n  //     } else {\n  //       setError(\"Something went wrong with post creation.\")\n  //     }\n  //   } catch (err) {\n  //     console.log(err)\n  //     const message = err?.response?.data?.error?.message\n  //     setError(message ?? String(err))\n  //   } finally {\n  //     setIsLoading(false)\n  //   }\n  // }\n  // const renderForm = () => {\n  //   if (!user?.email) {\n  //     return <NotAllowed />\n  //   }\n  //   return (\n  //     <div className=\"form\">\n  //       <div className=\"input-field\">\n  //         <label htmlFor=\"caption\">Caption</label>\n  //         <input\n  //           type=\"text\"\n  //           name=\"caption\"\n  //           placeholder=\"A cool caption here\"\n  //           value={form.caption}\n  //           onChange={handleOnInputChange}\n  //         />\n  //       </div>\n  //       <div className=\"input-field\">\n  //         <label htmlFor=\"imageUrl\">Image URL</label>\n  //         <input\n  //           type=\"text\"\n  //           name=\"imageUrl\"\n  //           placeholder=\"The image URL for your workstation\"\n  //           value={form.imageUrl}\n  //           onChange={handleOnInputChange}\n  //         />\n  //       </div>\n  //       <button className=\"btn\" disabled={isLoading} onClick={handleOnSubmit}>\n  //         {isLoading ? \"Loading...\" : \"Submit\"}\n  //       </button>\n  //     </div>\n  //   )\n  // }\n  // return (\n  //   <div className=\"NewPostForm\">\n  //     <div className=\"card\">\n  //       <h2>Create a new post</h2>\n  //       {Boolean(error) && <span className=\"error\">{error}</span>}\n  //       {renderForm()}\n  //     </div>\n  //   </div>\n  //)\n\n}\n\n_s(NewActivityForm, \"1tYJnN3d4j3fDMWkjWELUjTY1ao=\");\n\n_c = NewActivityForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewActivityForm\");","map":{"version":3,"sources":["/Users/sydney-varner/SITE/Life-Tracker/life-tracker-ui/src/components/NewActivityForm/NewActivityForm.js"],"names":["useState","NewActivityForm","user","addActivity","isLoading","setIsLoading","error","setError","form","setForm","caption","imageUrl","handleOnInputChange","event","f","target","name","value"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;AACA;AACA;;AACA,OAAO,uBAAP;AAEA,eAAe,SAASC,eAAT,CAAyB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAzB,EAAgD;AAAA;;AAC7D,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC;AAC/BU,IAAAA,OAAO,EAAE,EADsB;AAE/BC,IAAAA,QAAQ,EAAE;AAFqB,GAAD,CAAhC;;AAKA,QAAMC,mBAAmB,GAAIC,KAAD,IAAW;AACrCJ,IAAAA,OAAO,CAAEK,CAAD,KAAQ,EAAE,GAAGA,CAAL;AAAQ,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AAA1C,KAAR,CAAD,CAAP;AACD,GAFD,CAR6D,CAY7D;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;AACD;;GA9FuBhB,e;;KAAAA,e","sourcesContent":["import { useState } from \"react\"\n// import axios from \"axios\"\n//import apiClient from \"../../services/apiClient\"\n//import NotAllowed from \"../NotAllowed/NotAllowed\"\nimport \"./NewActivityForm.css\"\n\nexport default function NewActivityForm({ user, addActivity }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState(null)\n  const [form, setForm] = useState({\n    caption: \"\",\n    imageUrl: \"\",\n  })\n\n  const handleOnInputChange = (event) => {\n    setForm((f) => ({ ...f, [event.target.name]: event.target.value }))\n  }\n\n  // const handleOnSubmit = async () => {\n  //   setIsLoading(true)\n\n  //   const { data, error } = await apiClient.createPost({ caption: form.caption, imageUrl: form.imageUrl })\n  //   if (data) {\n  //     addActivity(data.post)\n  //     setForm({ caption: \"\", imageUrl: \"\" })\n  //   }\n  //   if (error) {\n  //     setError(error)\n  //   }\n\n  //   setIsLoading(false)\n  // }\n\n  // const handleOnSubmit = async (e) => {\n  //   e.preventDefault()\n  //   setIsLoading(true)\n\n  //   try {\n  //     const res = await axios.post(`http://localhost:3001/posts`, form)\n  //     if (res?.data?.post) {\n  //       addActivity(res.data.post)\n  //       setForm({ caption: \"\", imageUrl: \"\" })\n  //     } else {\n  //       setError(\"Something went wrong with post creation.\")\n  //     }\n  //   } catch (err) {\n  //     console.log(err)\n  //     const message = err?.response?.data?.error?.message\n  //     setError(message ?? String(err))\n  //   } finally {\n  //     setIsLoading(false)\n  //   }\n  // }\n\n  // const renderForm = () => {\n  //   if (!user?.email) {\n  //     return <NotAllowed />\n  //   }\n  //   return (\n  //     <div className=\"form\">\n  //       <div className=\"input-field\">\n  //         <label htmlFor=\"caption\">Caption</label>\n  //         <input\n  //           type=\"text\"\n  //           name=\"caption\"\n  //           placeholder=\"A cool caption here\"\n  //           value={form.caption}\n  //           onChange={handleOnInputChange}\n  //         />\n  //       </div>\n\n  //       <div className=\"input-field\">\n  //         <label htmlFor=\"imageUrl\">Image URL</label>\n  //         <input\n  //           type=\"text\"\n  //           name=\"imageUrl\"\n  //           placeholder=\"The image URL for your workstation\"\n  //           value={form.imageUrl}\n  //           onChange={handleOnInputChange}\n  //         />\n  //       </div>\n\n  //       <button className=\"btn\" disabled={isLoading} onClick={handleOnSubmit}>\n  //         {isLoading ? \"Loading...\" : \"Submit\"}\n  //       </button>\n  //     </div>\n  //   )\n  // }\n\n  // return (\n  //   <div className=\"NewPostForm\">\n  //     <div className=\"card\">\n  //       <h2>Create a new post</h2>\n\n  //       {Boolean(error) && <span className=\"error\">{error}</span>}\n\n  //       {renderForm()}\n  //     </div>\n  //   </div>\n  //)\n}"]},"metadata":{},"sourceType":"module"}